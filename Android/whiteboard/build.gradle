if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion COMPILESDKVERSION
    buildToolsVersion BUILDTOOLSVERSION
    defaultConfig {
        if (isModule.toBoolean()) {
            applicationId "io.agora.whiteboard"
        }
        minSdkVersion MINSDKVERSION
        targetSdkVersion TARGETSDKVERSION
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "test"
    productFlavors {
        leancloud {
        }

        firebase {
        }
    }

    if (isModule.toBoolean()) {
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Whiteboard-${versionName}-${variant.buildType.name}.apk"
            }
        }
    }
}

dependencies {
    implementation 'com.github.duty-os:white-sdk-android:2.12.26'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //noinspection GradleCompatible
    implementation 'com.google.android.material:material:1.0.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.aliyun.ams:alicloud-android-httpdns:1.2.5'
    api project(':data')
}
